name: CI/CD Pipeline - Full Flow with Approval and GitHub Package

on:
  # Eventi che triggerano la pipeline
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch: # Trigger manuale per approvazione
    inputs:
      environment:
        description: 'Environment to deploy'
        default: 'production'
        required: true

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  # Job di validazione per Pull Request (PR Validation)
  pr-validation:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build PR Docker Image
        run: |
          cd test-docker
          docker build -t ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:PR.${{ github.run_id }} .
          echo "Docker image built: PR.${{ github.run_id }}"

      - name: Push PR Docker Image to GitHub Container Registry
        run: |
          docker login ghcr.io -u ${{ github.actor }} --password-stdin <<< ${{ secrets.GHCR_TOKEN }}
          docker push ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:PR.${{ github.run_id }}

  # Fase 2: Build e Test (DEV)
  build-and-test:
    name: Build and Test for DEV
    runs-on: ubuntu-latest
    environment: test
    needs: pr-validation
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull PR Docker Image
        run: docker pull ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:PR.${{ github.run_id }}

      - name: Tag DEV Image
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:PR.${{ github.run_id }} ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:MA.${{ github.run_id }}.1.0
          docker push ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:MA.${{ github.run_id }}.1.0

      - name: Deploy to DEV
        run: |
          kubectl apply -f k8s/dev-deployment.yaml
          kubectl rollout status deployment/my-app-dev
        env:
          IMAGE: "ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:MA.${{ github.run_id }}.1.0"

  # Fase 3: Test in UAT e promozione a Golden
  uat-and-golden:
    name: Test in UAT and Promote Golden Image
    runs-on: ubuntu-latest
    environment: test
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull DEV Image
        run: docker pull ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:MA.${{ github.run_id }}.1.0

      - name: Tag Golden Image
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:MA.${{ github.run_id }}.1.0 ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:golden.${{ github.run_id }}.1.0
          docker push ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:golden.${{ github.run_id }}.1.0

      - name: Deploy to UAT
        run: |
          kubectl apply -f k8s/uat-deployment.yaml
          kubectl rollout status deployment/my-app-uat
        env:
          IMAGE: "ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:golden.${{ github.run_id }}.1.0"

  # Fase 4: Deploy in Produzione con approvazione
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: test
    needs: uat-and-golden
    if: github.event.inputs.approve_prod == 'yes'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull Golden Image
        run: docker pull ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:golden.${{ github.run_id }}.1.0

      - name: Deploy to Production
        run: |
          kubectl apply -f k8s/prod-deployment.yaml
          kubectl rollout status deployment/my-app-prod
        env:
          IMAGE: "ghcr.io/${{ github.repository_owner }}/test-runners/test-docker:golden.${{ github.run_id }}.1.0"
